<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bjørn Fjukstad</title>
    <link>http://fjukstad.github.io/</link>
    <description>Recent content on Bjørn Fjukstad</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>bjornfjukstad@gmail.com (Bjørn Fjukstad)</managingEditor>
    <webMaster>bjornfjukstad@gmail.com (Bjørn Fjukstad)</webMaster>
    <lastBuildDate>Thu, 10 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://fjukstad.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Paternity Leave Side Project</title>
      <link>http://fjukstad.github.io/blog/paternity-leave/</link>
      <pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate>
      <author>bjornfjukstad@gmail.com (Bjørn Fjukstad)</author>
      <guid>http://fjukstad.github.io/blog/paternity-leave/</guid>
      <description>10 months ago I became a father for the first time! To keep track of how far I pushed my baby boy around in a stroller/jogger during my paternal leave, I created a small web app with tech that was unfamiliar to me. 65 days into my paternity leave I&amp;rsquo;ve covered 503 kilometers, and I&amp;rsquo;ve been out more than 100 hours.
I usually track my runs/hikes/skiing with my Garmin Fenix 3 watch, which syncs to Strava.</description>
    </item>
    
    <item>
      <title>Neovim and .NET</title>
      <link>http://fjukstad.github.io/blog/nvim-and-dotnet/</link>
      <pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate>
      <author>bjornfjukstad@gmail.com (Bjørn Fjukstad)</author>
      <guid>http://fjukstad.github.io/blog/nvim-and-dotnet/</guid>
      <description>Just before I went on summer vacation, I spent the last week writing .NET code in Neovim. In the 0.5 release of Neovim they&amp;rsquo;ve added native support for the Language Server Protocol (LSP), which means that you can get go-to-definition, find-references, completion, and other neat features directly in Neovim.
I&amp;rsquo;m not a big fan of big clunky IDEs such as Visual Studio, so returning to vim as my daily driver has been on my wish list ever since I started at my current job.</description>
    </item>
    
    <item>
      <title>Bachelor Students 2021</title>
      <link>http://fjukstad.github.io/blog/bachelor-students-2021/</link>
      <pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate>
      <author>bjornfjukstad@gmail.com (Bjørn Fjukstad)</author>
      <guid>http://fjukstad.github.io/blog/bachelor-students-2021/</guid>
      <description>This spring I&amp;rsquo;ve been fortunate to advise two student groups in computer science at UiT The Arctic University of Norway in Bodø. There&amp;rsquo;s already a news post in Norwegian about this year&amp;rsquo;s students on the DIPS website (in Norwegian), but I wanted to go into a bit more detail on what they worked on.
Last year I had a group of four students, who worked on machine learning with electronic health record data at DIPS.</description>
    </item>
    
    <item>
      <title>Synthetic Patient Data</title>
      <link>http://fjukstad.github.io/blog/synthetic-data/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      <author>bjornfjukstad@gmail.com (Bjørn Fjukstad)</author>
      <guid>http://fjukstad.github.io/blog/synthetic-data/</guid>
      <description>When we&amp;rsquo;re developing software systems, it&amp;rsquo;s useful to fill them with data to illustrate and test how they work. For example, to show that the online store we are developing works as expected, we fill it up with products that we can purchase. Likewise, when we&amp;rsquo;re developing electronic health record (EHR) systems, it&amp;rsquo;s useful to fill them up with patient data.
While we can use real products to fill online stores, we cannot fill the EHR system we are developing with real patient data.</description>
    </item>
    
    <item>
      <title>Personal ECGs with the Withings Move ECG</title>
      <link>http://fjukstad.github.io/blog/withings/</link>
      <pubDate>Fri, 28 Aug 2020 00:00:00 +0000</pubDate>
      <author>bjornfjukstad@gmail.com (Bjørn Fjukstad)</author>
      <guid>http://fjukstad.github.io/blog/withings/</guid>
      <description>Last week I got hold of the Withings Move ECG, an analog smart watch that can record electrocardiograms (ECGs). While recording ECGs has been available on the Apple Watches, Withings is the only company that has easily opened up the raw ECG data through their API. There are rumors that Apple will allow 3rd party developers to read the raw ECG data in iOS 14. Withings on the other hand has included raw ECG data in their API since October 2019.</description>
    </item>
    
    <item>
      <title>.NET Core tools and Github Actions</title>
      <link>http://fjukstad.github.io/blog/scrub/</link>
      <pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate>
      <author>bjornfjukstad@gmail.com (Bjørn Fjukstad)</author>
      <guid>http://fjukstad.github.io/blog/scrub/</guid>
      <description>TL;DR .NET Core tools are a great way of developing small platform-independent command line tools with C# and .NET. Github Actions are really great for automating the whole process of building, and publishing these tools.
Introduction Recently I have been switching a lot between Powershell on Windows and bash in Ubuntu in WSL to get some of our openEHR components in .NET running on Linux.
Since I was switching back and forth between the different shells, there were times when I wished I had access to the same tools in both shells.</description>
    </item>
    
    <item>
      <title>Open-sourcing openEHR packages</title>
      <link>http://fjukstad.github.io/blog/open-sourcing-openehr-packages/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      <author>bjornfjukstad@gmail.com (Bjørn Fjukstad)</author>
      <guid>http://fjukstad.github.io/blog/open-sourcing-openehr-packages/</guid>
      <description>This spring I have adviced a group of four bachelor students in computer science from UiT campus Bodø. The team has worked on machine learning on openEHR data, and as a result have produced a lot of great software.
Two of the packages the team has developed on are openehR and openehpy. These are packages for retrieving data from an openEHR server through its openEHR REST API. Both packages get data from an openEHR REST API, and you can use the pacakges to get data from any system that implements the API.</description>
    </item>
    
    <item>
      <title>Analyzing COVID-19 data at DIPS</title>
      <link>http://fjukstad.github.io/blog/openehr-covid-19/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      <author>bjornfjukstad@gmail.com (Bjørn Fjukstad)</author>
      <guid>http://fjukstad.github.io/blog/openehr-covid-19/</guid>
      <description>A couple of weeks ago I published a post on how we enable data science at DIPS, which told the story on how we can get data from our openEHR server in the R programming language. To make things even more interesting, this post will show how we can get screening symptoms from COVID-19 patients registered in our openEHR Server in DIPS Arena. With this data we can create reports with R Markdown, beautiful Shiny dashboards, and open up for researchers to explore and analyze the data in their own environment.</description>
    </item>
    
    <item>
      <title>p5.js</title>
      <link>http://fjukstad.github.io/blog/p5js/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      <author>bjornfjukstad@gmail.com (Bjørn Fjukstad)</author>
      <guid>http://fjukstad.github.io/blog/p5js/</guid>
      <description>In Bodø I help organize local the coding club. Because of the covid-19 situation we are hosting the club on Discord, rather than in person at the public library in Bodø. This afternoon the participants were working fairly idependent, so I had some time to sit down some more with p5.js.
p5.js is a great Javascript library for creating visual content in the web browser, e.g. animations, games, art etc. In short a p5.</description>
    </item>
    
    <item>
      <title>Enabling Data Science in DIPS</title>
      <link>http://fjukstad.github.io/blog/enabling-data-science-in-dips/</link>
      <pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate>
      <author>bjornfjukstad@gmail.com (Bjørn Fjukstad)</author>
      <guid>http://fjukstad.github.io/blog/enabling-data-science-in-dips/</guid>
      <description>At DIPS we are currently productionizing our new electronic health record (EHR) system, DIPS Arena. With DIPS Arena we have made the move to store structured clinical data with openEHR. openEHR is an open technology for e-health systems that help different vendors to build interoperable systems for healthcare. In other words, it helps define the different clinical concepts, e.g. blood pressures, body temperatures etc, how we can represent them, and how we can retrieve them from systems that implement an openEHR API.</description>
    </item>
    
    <item>
      <title>Soltimer Påsken 2020</title>
      <link>http://fjukstad.github.io/blog/sun-hours/</link>
      <pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate>
      <author>bjornfjukstad@gmail.com (Bjørn Fjukstad)</author>
      <guid>http://fjukstad.github.io/blog/sun-hours/</guid>
      <description>Meteorologene på twitter skrev en tweet om hvor mange soltimer det hadde vært i påska.
Av bildet kan det se ut som om solene er skalert opp og ned basert på antall soltimer. Selv om Oslo har nesten 7 ganger så mange soltimer som Tromsø, virker det ikke som om at størrelsen på solene reflekterer dette. Her er et eksempel på hvordan man kunne lagd en lignende visualisering i R</description>
    </item>
    
    <item>
      <title>Hello World!</title>
      <link>http://fjukstad.github.io/blog/hello-world/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      <author>bjornfjukstad@gmail.com (Bjørn Fjukstad)</author>
      <guid>http://fjukstad.github.io/blog/hello-world/</guid>
      <description>I have been wanting to get started with technical writing for a while now. Hopefully, re-writing my fjukstad.github.io website to use hugo, and creating a /blog menu item on my website will get me started.
At the moment I am working on data analysis and visualization of covid-19 data for the company I work at, DIPS, and I believe that the first real post will be about just that. For those of you who do not know, DIPS is both the name of the company, and the name of the electronic patient health record systems used by the majority of Norwegian hospitals.</description>
    </item>
    
    <item>
      <title>Research</title>
      <link>http://fjukstad.github.io/research/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>bjornfjukstad@gmail.com (Bjørn Fjukstad)</author>
      <guid>http://fjukstad.github.io/research/</guid>
      <description>Here&amp;rsquo;s a (hopefully) updated list of my publications, talks etc.
Papers  Reproducible Data Analysis Pipelines for Precision Medicine. Bjørn Fjukstad, Vanessa Dumeaux, Michael Hallett, Lars Ailo Bongo. 27th Euromicro International Conference on Parallel, Distributed and Network-Based Processing (PDP). 2019. Teaching Electronics and Programming in Norwegian Schools Using the air:bit Sensor Kit. Bjørn Fjukstad, Nina Angelvik, Morten Grønnesby, Maria Wulff Hauglann, Hedinn Gunhildrud, Fredrik Høisæther Rasch, Julianne Iversen, Margaret Dalseng, Lars Ailo Bongo.</description>
    </item>
    
    <item>
      <title>Teaching</title>
      <link>http://fjukstad.github.io/teaching/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>bjornfjukstad@gmail.com (Bjørn Fjukstad)</author>
      <guid>http://fjukstad.github.io/teaching/</guid>
      <description>I&amp;rsquo;m also doing my best to teach others! I&amp;rsquo;ve been teaching at university and organizing the local Code Club in Tromsø for the last couple of years. On this page I&amp;rsquo;ve tried to list all of it below with some links to source code or other materials. Although I believe that everything I do at the University should be open, I was unfortunately not allowed to open-source everything I built for the uni courses!</description>
    </item>
    
  </channel>
</rss>
